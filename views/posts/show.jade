extends ../layout

block content
  .container
    h1.page-header= post.title
    p
      b by #{post.email}
      | 
      span at #{moment(post.createdAt).format('YYYY-MM-DD HH:mm:ss')} 
      | 
      | (조회수 #{post.read})
    p
      label= "Title"
      p.well= post.title
      label= "Images"
      p
        each img in post.images
          img.img-rounded.img-responsive(src=img)
      label= "City"
      p.well= post.city
      label= "Address"
      p.well= post.address
      label= "Map"
      #map(style='width:100%;height:350px;')
      //- script(type='text/javascript', src='//apis.daum.net/maps/maps3.js?apikey=a87ec202faca5b4bf22b2a5d38f4cf67&libraries=services')
      script.
          var mapContainer = document.getElementById('map'), // 지도를 표시할 div
              mapOption = {
                center: new daum.maps.LatLng(33.450701, 126.570667), // 지도의 중심좌표
                level: 3 // 지도의 확대 레벨
              };
          // 지도를 생성합니다
          var map = new daum.maps.Map(mapContainer, mapOption);
          // 주소-좌표 변환 객체를 생성합니다
          var geocoder = new daum.maps.services.Geocoder();
          // 주소로 좌표를 검색합니다
          geocoder.addr2coord('#{post.address}', function(status, result) {
          // 정상적으로 검색이 완료됐으면
            if (status === daum.maps.services.Status.OK) {
              var coords = new daum.maps.LatLng(result.addr[0].lat, result.addr[0].lng);
              // 결과값으로 받은 위치를 마커로 표시합니다
              var marker = new daum.maps.Marker({
                  map: map,
                  position: coords
              });
              // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다
              map.setCenter(coords);
            }
          });
      label= "Price"
      p.well= post.price
      label= "Facility"
      p.well= post.facility
      label= "Rule"
      p.well= post.rule
      label= "Content"
      p.well= post.content
    form(action = "/hosts/#{post.id}/book", method='POST')
      .form-group
          label(for='checkin') Check-In
          input.form-control(type='date', id='checkin', name='checkin', placeholder='checkin')
          label(for='checkout') Check-Out
          input.form-control(type='date', id='checkout', name='checkout', placeholder='checkout')
          label(for='people') 인원수
          input.form-control(type='number', id='people', name='people', placeholder='people')
      div.form-actions
          button.btn.btn-primary(type='submit') Book
    p
      h3 Comment (#{post.numComment})
      table.table
        tr
          th email
          th content
          th time
        each comment in comments
          tr
            td= comment.email
            td= comment.content
            td= moment(comment.createdAt).format('YYYY/MM/DD')
  
        //- form.form-inline(action='/posts/' + post._id + '/comments', method='POST')
    form(action = "/posts/#{post.id}/comments", method='POST')
      .form-group
        label.sr-only(for='email') email
        input.form-control(name='email', placeholder='email')
      .form-group
        label.sr-only(for='content') content
        input.form-control(name='content', size=50, placeholder='content')
      div.form-actions
        button.btn.btn-primary(type='submit') 댓글저장
          //- button.btn.btn-info 댓글저장

    a.btn.btn-default(href='/posts/index') 목록
